<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springboot.dao.SupportsMapper">

    <resultMap type="com.springboot.bean.Supports" id="supportsMap">
             <result property="id" column="id"/>
             <result property="sellerId" column="seller_id"/>
             <result property="type" column="type"/>
             <result property="description" column="description"/>
     </resultMap>

    <select id="queryObject" resultType="com.springboot.bean.Supports">
		select
		`id`,
		`seller_id`,
		`type`,
		`description`
		from supports
		where id = #{id}
	</select>

    <select id="queryList" resultType="com.springboot.bean.Supports">
        select
            `id`,
            `seller_id`,
            `type`,
            `description`
        from supports
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from supports
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.springboot.bean.Supports"   useGeneratedKeys="true" keyProperty="id">
		insert into supports(
                			`seller_id`,
        			`type`,
        			`description`)
		values(
                			#{sellerId},
        			#{type},
        			#{description})
	</insert>
    <update id="update" parameterType="com.springboot.bean.Supports">
        update supports
        <set>
                <if test="sellerId != null">`seller_id` = #{sellerId}, </if>
                <if test="type != null">`type` = #{type}, </if>
                <if test="description != null">`description` = #{description}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from supports where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from supports where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>