<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springboot.dao.RecommendMapper">

    <resultMap type="com.springboot.bean.Recommend" id="recommendMap">
             <result property="id" column="id"/>
             <result property="ratingId" column="rating_id"/>
             <result property="goodsId" column="goods_id"/>
     </resultMap>

    <select id="queryObject" resultType="com.springboot.bean.Recommend">
		select
		`id`,
		`rating_id`,
		`goods_id`
		from recommend
		where id = #{id}
	</select>

    <select id="queryList" resultType="com.springboot.bean.Recommend">
        select
            `id`,
            `rating_id`,
            `goods_id`
        from recommend
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from recommend
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.springboot.bean.Recommend"     useGeneratedKeys="true" keyProperty="id">
		insert into recommend(
                	`rating_id`,
        			`goods_id`)
		values(
                #{ratingId},
        		#{goodsId})
	</insert>
    <update id="update" parameterType="com.springboot.bean.Recommend">
        update recommend
        <set>
            <if test="ratingId != null">`rating_id` = #{ratingId}, </if>
            <if test="goodsId != null">`goods_id` = #{goodsId}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from recommend where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from recommend where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>